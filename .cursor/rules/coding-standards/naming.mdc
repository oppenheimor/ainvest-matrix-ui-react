---
description: 
globs: 
alwaysApply: true
---
基本原则：组件的命名要求**全称**，不要用缩写。

## Props（属性）

* 初始化属性：`default` + `属性名`
* 强制渲染：`forceRender`
  * 强制渲染子组件：`force` + `子组件名` + `Render`
* 子组件渲染：`子组件名` + `Render`，例如：
> panelRender(originNode, info: { SubComponent1, SubComponent2, [somePassedProps]: someValue })
* 子项渲染：`子项名` + `Render`，例如：
> cellRender(date, info: { [somePassedProps]: someValue })
* 数据源：`dataSource`
* 面板展开：弹窗和下拉用 `open`，额外弹窗用 `popupName` + `Open`，如 `tooltipOpen`
  * 不要用 `visible`，确保所有可见性相关 API 统一
* `children`：
  * 主要用于展示内容，避免额外的属性名
  * 选项列表如 `Select.Option` 或 `Tree.TreeNode`
  * 自定义包裹组件，如果 `children` 未来可能有其他用途，可考虑用 `component` 属性
* 展示相关命名：`show` + `属性名`
* 功能性：`属性名` + `able`
* 禁用：`disabled`
  * 子组件：`disabled` + `子组件名`
* 额外内容：`extra`
  * 子组件：`子组件名` + `extra`，如 `titleExtra`
* 主要图标：`icon`
  * 优先与功能合并：`functionName: { icon }`，如 `expandable: { icon: <Smile /> }`
  * 多个图标：`FunctionName` + `Icon`
* 触发器：`trigger`
  * 子功能触发器：`子功能` + `Trigger`
  * 某时点触发：`xxx` + `On` + `事件名`（如 `destroyOnHidden`）
* 组件使用其他组件配置，命名为组件名（如 `<Table pagination={{...}} />`）
* 类名：`className`
  * 额外类名合并到 `classes`（如 `<Button classes={{ inner: 'custom-inner' }} />`）
* 格式
  * 失焦时不修改值：`preserveInvalidOnBlur`

## 事件

* 触发事件：`on` + `事件名`
  * 触发子组件事件：`on` + `子组件名` + `事件名`（如 `onSearchChange`）
  * 触发属性事件：`on` + `属性名` + `事件名`（如 `onDragStart`）
* 事件前：`before` + `事件名`
* 事件后：`after` + `事件名`
* 连续操作后（如拖动 Slider）：`on` + `事件名` + `Complete`

## 引用

组件应有 `ref` 属性，结构如下：

```tsx
ComponentRef {
  nativeElement: HTMLElement;
  // 其他方法
  focus: VoidFunction;
}
```

## 文档中的 API 标准

### 示例

| 属性      | 说明                   | 类型                           | 默认值 |
| --------- | ---------------------- | ------------------------------ | ------ |
| htmlType | xxx        | string                               | `button`      |
| type          | xxx           | `horizontal` \| `vertical`  | `horizontal` |
| disabled  | xxx           | boolean                            | false  |
| minLength      | xxx                         | number                           | 0      |
| style      | xxx                    | CSSProperties                  | -   |
| character | xxx | (props) => ReactNode | - |
| offset | xxx| [number, number] | [0, 0] |
| value     | xxx         | string \| number | `small`      |

### 约定

- 字符串类型，**默认值**用 `` ` ``
- 可在 **类型** 中列出字符串可选值
- 布尔类型，**默认值**为 true 或 false
- 数字类型，**默认值**直接用数字
- 函数类型，**类型**中用箭头函数表达式
- 没有默认值用 -
- 除 `someProp` 外，**说明**首字母大写
- **说明**结尾不加句号
- API 顺序按字母排序，特殊情况（如 xs sm md）可放一起
